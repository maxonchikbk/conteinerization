version: "3.7"

volumes:
  prometheus_data:
  grafana_data:
  bot_data:
  
services:
  nginx:
    image: nginx:stable-alpine
    volumes:
    #  - ./configs/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./configs/nginx/conf.d:/etc/nginx/conf.d
      - ./configs/nginx/www:/var/www
      - ./configs/nginx/other:/etc/nginx/other
      - /var/log/nginx:/var/log/nginx
    restart: unless-stopped
    ports:
      - 80:80
  
  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./configs/prometheus/targets:/etc/prometheus/targets
      - ./configs/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command: 
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--storage.tsdb.retention.time=70d"
      # - "--log.level=debag"
      - "--web.enable-lifecycle"
    restart: unless-stopped
  
  alertmanager:
    image: prom/alertmanager:latest
    volumes:
      - ./configs/alertmanager/:/etc/alertmanager/
    command: 
      - "--config.file=/etc/alertmanager/config.yml"
      - "--storage.path=/alertmanager"
      - "--web.route-prefix=/alertmanager"
    restart: unless-stopped
  
  grafana:
    image: grafana/grafana:latest
    user: "472"
    volumes: 
      - grafana_data:/var/lib/grafana
      - ./configs/grafana/grafana.ini:/etc/grafana/grafana.ini
    environment: 
      GF_SECURITY_ADMIN_USER: "geek"
      GF_SECURITY_ADMIN_PASSWORD: "12345678"
      GF_USERS_ALLOW_SIGN_UP: "false"
    restart: unless-stopped

  blackbox_exporter:
    image: prom/blackbox-exporter:latest
    volumes: 
      - ./configs/blackbox_exporter/config.yml:/etc/blackbox_exporter/config.yml
    restart: unless-stopped
  
  # alertmanager-bot:
  #   image: serg3091/prometheus_bot:latest
  #   volumes:
  #     - ./configs/alertmanager-bot/config.yaml:/config.yaml
  #     - ./configs/alertmanager-bot/template.tmpl:/template.tmpl
  #   restart: unless-stopped

  node_exporter:
    image: quay.io/prometheus/node-exporter:latest
    container_name: node_exporter
    command:
      - '--path.rootfs=/host'
    pid: host
    restart: unless-stopped
    volumes: 
      - /:/host:ro
    logging:
      options:
        max-size: "100M"
        max-file: "10"
  
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    volumes:
      - /:/rootfs:fo
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    restart: unless-stopped
      
      


    
      